{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendListItem/FriendListItem.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","s","profile","description","src","alt","label","quantity","followers","views","likes","Statistics","title","statistics","statList","map","id","percentage","item","FriendListItem","isOnline","isOffline","width","FileList","propTypes","friends","PropTypes","arrayOf","object","isRequired","FriendList","friendList","TransactionHistory","items","transactionHistory","type","amount","currency","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","querySelector"],"mappings":"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","file":"static/js/main.10a5eda3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1OUje\",\"description\":\"Profile_description__1AOaT\",\"avatar\":\"Profile_avatar__HrQwg\",\"name\":\"Profile_name__rC19E\",\"tag\":\"Profile_tag__11cyM\",\"location\":\"Profile_location__3aadh\",\"stats\":\"Profile_stats__1chxK\",\"label\":\"Profile_label__1ER3d\",\"quantity\":\"Profile_quantity__uR6s5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__SS5R4\",\"title\":\"Statistics_title__1ux6C\",\"statList\":\"Statistics_statList__3U6W5\",\"label\":\"Statistics_label__FRwYY\",\"percentage\":\"Statistics_percentage__3DZUA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__1iBck\",\"status\":\"FriendListItem_status__14Vz_\",\"isOnline\":\"FriendListItem_isOnline__Qk0o6 FriendListItem_status__14Vz_\",\"isOffline\":\"FriendListItem_isOffline__I3XhR FriendListItem_status__14Vz_\",\"avatar\":\"FriendListItem_avatar__24PwU\",\"name\":\"FriendListItem_name__1qIKx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__3zPlt\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from '../Profile/Profile.module.css';\n\nexport default function Profile({ name, tag, location, avatar, stats }) {\n    return (\n        <div className={s.profile}>\n            <div className={s.description}>\n                <img\n                    src={avatar}\n                    alt=\"Аватар пользователя\"\n                    className={s.avatar}\n                />\n                <p className={s.name}>\n                    <b> {name}</b>{' '}\n                </p>\n                <p className={s.tag}>@{tag}</p>\n                <p className={s.location}>{location}</p>\n            </div>\n\n            <ul className={s.stats}>\n                <li>\n                    <span className={s.label}>Followers </span>\n                    <span className={s.quantity}>{stats.followers}</span>\n                </li>\n                <li>\n                    <span className={s.label}>Views </span>\n                    <span className={s.quantity}>{stats.views}</span>\n                </li>\n                <li>\n                    <span className={s.label}>Likes </span>\n                    <span className={s.quantity}>{stats.likes}</span>\n                </li>\n            </ul>\n        </div>\n    );\n}\n\nProfile.propTypes = {\n    name: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    avatar: PropTypes.string.isRequired,\n    stats: PropTypes.shape({\n        followers: PropTypes.number.isRequired,\n        views: PropTypes.number.isRequired,\n        likes: PropTypes.number.isRequired,\n    }),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nexport default function Statistics({ title, stats }) {\n    return (\n        <section className={s.statistics}>\n            {title && <h2 className={s.title}>Upload stats</h2>}\n            <ul className={s.statList}>\n                {stats.map(({ id, label, percentage }) => (\n                    <li className={s.item} key={id}>\n                        <span className={s.label}>{label}</span>\n                        <span className={s.percentage}>{percentage}%</span>\n                    </li>\n                ))}\n            </ul>\n        </section>\n    );\n}\n\nStatistics.propTypes = {\n    title: PropTypes.string,\n    stats: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            label: PropTypes.string.isRequired,\n            percentage: PropTypes.number.isRequired,\n        }),\n    ),\n};\n\n/* <ul className={s.statList}>\n    {stats.map(({ id, stat }) => (\n        <li className={s.item} key={id}>\n            <span className={s.label}>{stat.label}</span>\n            <br />\n            <span className={s.percentage}>{stat.percentage} %</span>\n        </li>\n    ))}\n</ul>; */\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from '../FriendListItem/FriendListItem.module.css';\n\nconst FriendListItem = ({ avatar, name, isOnline = true }) => {\n    return (\n        <li className={s.item}>\n            <span\n                // className={s.status}\n                className={isOnline ? s.isOnline : s.isOffline}\n            ></span>\n            <img className={s.avatar} src={avatar} alt={name} width=\"48\" />\n            <p className={s.name}>{name}</p>\n        </li>\n    );\n};\n\nFriendListItem.propTypes = {\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem/FriendListItem';\nimport s from '../FriendList/FriendList.module.css';\n\nconst FriendList = ({ friends }) => {\n    return (\n        <ul className={s.friendList}>\n            {friends.map(({ id, name, avatar, isOnline }) => (\n                <FriendListItem\n                    key={id}\n                    avatar={avatar}\n                    name={name}\n                    isOnline={isOnline}\n                />\n            ))}\n        </ul>\n    );\n};\nFileList.propTypes = {\n    friends: PropTypes.arrayOf(PropTypes.object.isRequired),\n};\n\nexport default FriendList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => {\n    return (\n        <table className={s.transactionHistory}>\n            <thead>\n                <tr>\n                    <th>Type</th>\n                    <th>Amount</th>\n                    <th>Currency</th>\n                </tr>\n            </thead>\n\n            <tbody>\n                {items.map(({ id, type, amount, currency }) => (\n                    <tr key={id}>\n                        <td>{type}</td>\n                        <td>{amount}</td>\n                        <td>{currency}</td>\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    );\n};\n\nTransactionHistory.propTypes = {\n    items: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            type: PropTypes.string.isRequired,\n            amount: PropTypes.string.isRequired,\n            currency: PropTypes.string.isRequired,\n        }),\n    ),\n};\n\nexport default TransactionHistory;\n","import React from 'react';\nimport Profile from '../Profile/Profile';\nimport Statistics from '../Statistics/Statistics';\nimport FriendList from '../FriendList/FriendList';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\n\nimport user from '../../json/user.json';\nimport statisticalData from '../../json/statistical-data.json';\nimport friends from '../../json/friends.json';\nimport transactions from '../../json/transactions.json';\n\nexport default function App() {\n    return (\n        <div>\n            <h2>Task 1</h2>\n            <Profile\n                name={user.name}\n                tag={user.tag}\n                location={user.location}\n                avatar={user.avatar}\n                stats={user.stats}\n            />\n            <br />\n            <h2>Task 2</h2>\n            <Statistics title=\"Upload stats\" stats={statisticalData} />\n            <Statistics stats={statisticalData} />\n            <br />\n            <h2>Task 3</h2>\n            <FriendList friends={friends} />\n            <br />\n            <h2>Task 4</h2>\n            <TransactionHistory items={transactions} />\n        </div>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}